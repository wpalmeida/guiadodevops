apiVersion: v1
kind: Service
metadata:
  name: uptime-kuma-service
  namespace: monitoring
spec:
  selector:
    app: uptime-kuma
  ports:
  - name: uptime-kuma
    port: 3001

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: uptime-kuma
  namespace: monitoring
spec:
  replicas: 1
  serviceName: uptime-kuma-service
  selector:
    matchLabels:
      app: uptime-kuma
  template:
    metadata:
      labels:
        app: uptime-kuma
    spec:
      containers:
        - name: uptime-kuma
          image: louislam/uptime-kuma:1.23.11-debian
          env:
            - name: UPTIME_KUMA_PORT
              value: "3001"
            - name: PORT
              value: "3001"
          ports:
            - name: uptime-kuma
              containerPort: 3001
              protocol: TCP
          volumeMounts:
            - name: kuma-data
              mountPath: /app/data
          livenessProbe:
            tcpSocket:
              port: 3001
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /dashboard
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 3              

  volumeClaimTemplates:
    - metadata:
        name: kuma-data
      spec:
        accessModes: ["ReadWriteOnce"]
        volumeMode: Filesystem
        resources:
          requests:
            storage: 10Gi

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uptime-kuma-ingress
  namespace: monitoring
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.org/websocket-services: "uptime-kuma-service"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - uptime-kuma.guiadodevops.com.br
    secretName: uptime-kuma-tls
  rules:
  - host: uptime-kuma.guiadodevops.com.br
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: uptime-kuma-service
            port:
              number: 3001